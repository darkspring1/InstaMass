<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
    </startup>
  <akka>
    <hocon>
      <![CDATA[
          akka {
            loglevel = DEBUG
            
            actor {
                     provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
                     
                     deployment {
                        /instaUserAction {
                           router = round-robin-pool
                           nr-of-instances = 1
                           cluster {
                              enabled = on
                              max-nr-of-instances-per-node = 1
                              use-role = api
                           }
                        }
                        
                        /videoDetails {
                           router = round-robin-pool
                           nr-of-instances = 100
                           cluster {
                              enabled = on
                              max-nr-of-instances-per-node = 5
                              use-role = statelessWorker
                           }
                        }
                     }
                     
                     
                 
          }
          
          remote {
            helios.tcp {
              hostname = "127.0.0.1"
              port = 6666
            }
          }            

          cluster {
              seed-nodes = ["akka.tcp://instamass@127.0.0.1:4053"]
              roles = [api]
              
              singleton {
                  singleton-name = "instaUserAction"
                  role = "api"
                  hand-over-retry-interval = 1s
              }
              
              singleton-proxy {
                  singleton-name = "instaUserAction"
                  role = "api"
                  singleton-identification-interval = 2s
                  buffer-size = 100
              }
          }
          
          cluster.sharding {
            role = "api"
          }
          
          
          akka.persistence {
              
              journal {
		plugin = "akka.persistence.journal.postgresql"
		postgresql {
			# qualified type name of the PostgreSql persistence journal actor
			class = "Akka.Persistence.PostgreSql.Journal.PostgreSqlJournal, Akka.Persistence.PostgreSql"

			# dispatcher used to drive journal actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# connection string used for database access
			connection-string = "server=localhost;port=5432;database=insta_flw.akka;username=postgres;password=postgres"

			# default SQL commands timeout
			connection-timeout = 30s

			# PostgreSql schema name to table corresponding with persistent journal
			schema-name = public

			# PostgreSql table corresponding with persistent journal
			table-name = event_journal

			# should corresponding journal table be initialized automatically
			auto-initialize = on
			
			# timestamp provider used for generation of journal entries timestamps
			timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
		
			# metadata table
			metadata-table-name = metadata

			# defines column db type used to store payload. Available option: BYTEA (default), JSON, JSONB
			stored-as = JSON
		}
	}
  
  	snapshot-store {
		plugin = "akka.persistence.snapshot-store.postgresql"
		postgresql {
			# qualified type name of the PostgreSql persistence journal actor
			class = "Akka.Persistence.PostgreSql.Snapshot.PostgreSqlSnapshotStore, Akka.Persistence.PostgreSql"

			# dispatcher used to drive journal actor
			plugin-dispatcher = ""akka.actor.default-dispatcher""

			# connection string used for database access
			connection-string = "server=localhost;port=5432;database=insta_flw.akka;username=postgres;password=postgres"

			# default SQL commands timeout
			connection-timeout = 30s

			# PostgreSql schema name to table corresponding with persistent journal
			schema-name = public

			# PostgreSql table corresponding with persistent journal
			table-name = snapshot_store

			# should corresponding journal table be initialized automatically
			auto-initialize = on
			
			# defines column db type used to store payload. Available option: BYTEA (default), JSON, JSONB
			stored-as = JSON
		}
	}

	
	} 
                            
          }
      ]]>
    </hocon>
  </akka>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Npgsql" publicKeyToken="5d8b90d52f46fda7" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.2.4.1" newVersion="3.2.4.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Collections.Immutable" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.1.0" newVersion="1.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Threading.Tasks.Extensions" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>